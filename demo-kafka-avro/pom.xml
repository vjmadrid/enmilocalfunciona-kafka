<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0
                             http://maven.apache.org/xsd/maven-4.0.0.xsd">

    <modelVersion>4.0.0</modelVersion>
    <groupId>com.acme.kafka</groupId>
    <artifactId>demo-kafka-avro</artifactId>
    <version>0.0.1-SNAPSHOT</version>
	<packaging>jar</packaging>

	<name>demo-kafka-avro</name>
	<description></description>

	<properties>
		<!-- *** Important : Include properties in ~/.m2/settings.xml -->

		<!-- Compiler & Resources -->
		<java.version>1.8</java.version>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>

		<!-- Dependency Versions -->
		<kafka-clients.version>2.4.1</kafka-clients.version>
		
		<logback.version>1.2.3</logback.version>
		<slf4j.version>1.7.25</slf4j.version>

		<!-- Testing -->
		<!-- * Default value -> use profile -->
		<!-- 
		<skip.unit.tests>false</skip.unit.tests>
		-->

		<!-- Plugins -->
		<maven-compiler-plugin.version>3.8.1</maven-compiler-plugin.version>
		<maven-resources-plugin.version>3.1.0</maven-resources-plugin.version>
		<maven-surefire-plugin.version>2.22.2</maven-surefire-plugin.version>
		
	</properties>

	<!-- <profiles> They are found definitively in in ~/.m2/settings.xml -->

	<dependencies>

		<!-- *** Architecture libraries *** -->

        <!-- *** Third Party Libraries *** -->

        <!-- kafka-clients : Client for use Apache Kafka -->
		<dependency>
			<groupId>org.apache.kafka</groupId>
			<artifactId>kafka-clients</artifactId>
			<version>${kafka-clients.version}</version>
		</dependency>
		
		<!-- kafka-avro-serializer : Kafka Avro Serializer 
		<dependency>
		    <groupId>io.confluent</groupId>
		    <artifactId>kafka-avro-serializer</artifactId>
		    <version>5.3.0</version>
		</dependency>
		-->
		
		<!-- log4j-over-slf4j : Log4j implemented over SLF4J -->
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>log4j-over-slf4j</artifactId>
			<version>${slf4j.version}</version>
		</dependency>

		<!-- slf4j-api : slf4j APIs -->
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
			<version>${slf4j.version}</version>
		</dependency>

		<!-- jcl-over-slf4j : Bridge logging from JCL to SLF4j -->
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>jcl-over-slf4j</artifactId>
			<version>${slf4j.version}</version>
		</dependency>

		<!-- logback : logging -->
		<dependency>
			<groupId>ch.qos.logback</groupId>
			<artifactId>logback-classic</artifactId>
			<version>${logback.version}</version>
		</dependency>

		<dependency>
			<groupId>ch.qos.logback</groupId>
			<artifactId>logback-core</artifactId>
			<version>${logback.version}</version>
		</dependency>
		
		<!-- lombok : automatic generation of getters, setters, equals, hashCode, toString, etc -->
		<dependency>
		    <groupId>org.projectlombok</groupId>
		    <artifactId>lombok</artifactId>
		    <version>1.18.20</version>
		</dependency>
		
	</dependencies>

	<build>
		<finalName>demo-kafka-avro</finalName>
        <plugins>

			<!-- maven-compiler-plugin : Plugin used to compile the project source -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>${maven-compiler-plugin.version}</version>
				<configuration>
					<source>${java.version}</source>
					<target>${java.version}</target>
					<encoding>${project.build.sourceEncoding}</encoding>
				</configuration>
			</plugin>

			<!-- maven-resources-plugin : Plugin used to handle the project resources -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-resources-plugin</artifactId>
				<version>${maven-resources-plugin.version}</version>
				<configuration>
					<encoding>${project.build.sourceEncoding}</encoding>
				</configuration>
			</plugin>

			<!-- maven-surefire-plugin : Plugin used to run unit tests - Generate reports in the directory target/surefire-reports -->
			<plugin>
				<artifactId>maven-surefire-plugin</artifactId>
				<configuration>
					<skipTests>${skip.unit.tests}</skipTests>
					<testFailureIgnore>false</testFailureIgnore>
					<properties>
						<configurationParameters>
							junit.jupiter.execution.parallel.enabled=true
							junit.jupiter.execution.parallel.config.dynamic.factor=2
							junit.platform.output.capture.stdout=true
							junit.platform.output.capture.stderr=true
						</configurationParameters>
					</properties>
				</configuration>
			</plugin>
			
		</plugins>
	</build>

</project>
